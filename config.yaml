augmentations:
  train:
    transform: A.Compose
    transforms:
      - &pre_transforms
        transform: A.Compose
        transforms:
          - transform: A.LongestMaxSize
            max_size: ${data.image_size}
          - transform: A.PadIfNeeded
            min_height: ${data.image_size}
            min_width: ${data.image_size}
            border_mode: 1 # cv2.BORDER_REPLICATE
      - &hard_transforms
        transform: A.Compose
        transforms:
          - transform: A.CoarseDropout
            max_holes: 3
            max_height: 45
            max_width: 45
          - transform: A.ShiftScaleRotate
            shift_limit: 0.1
            scale_limit: 0.1
            rotate_limit: 15
            border_mode: 2 # cv2.BORDER_REFLECT
          - transform: A.OneOf
            transforms:
              - transform: A.HueSaturationValue
              - transform: A.ToGray
              - transform: A.RGBShift
              - transform: A.ChannelShuffle
          - transform: A.RandomBrightnessContrast
            brightness_limit: 0.5
            contrast_limit: 0.5
          - transform: A.RandomGamma
          - transform: A.CLAHE
          - transform: A.ImageCompression
            quality_lower: 50
      - &post_transforms
        transform: A.Compose
        transforms:
          - transform: A.Normalize
          - transform: A.pytorch.transforms.ToTensorV2
  valid:
    transform: A.Compose
    transforms:
      - *pre_transforms
      - *post_transforms
callbacks:
  early_stopping:
    class_name: pl.callbacks.EarlyStopping
    params:
      mode: ${training.mode}
      patience: 10
  model_checkpoint:
    class_name: pl.callbacks.ModelCheckpoint
    params:
      filepath: saved_models/
      mode: ${training.mode}
      save_last: True
      save_top_k: 1
data:
  batch_size: 64
  dataset_filename: dataset.csv
  dataset_path: data/
  images_folder_name: images
  image_size: 224
  labels_filename: tag2class.json
  num_classes: 23
  num_workers: 0
  validation_split: 0.15
debug:
  enabled: False
  save_images: True
  images_folder: images
general:
  project_name: classification
logging:
  log: true
  logs_dir: logs/
  best_model_path: best_model/
  best_model_name: model.pth
  best_model_labels: ${data.labels_filename}
model:
  backbone:
    class_name: torchvision.models.resnet18
    params:
      pretrained: true
optimizer:
  class_name: torch.optim.Adam
  params:
    lr: ${training.learning_rate}
    weight_decay: 0.0001
scheduler:
  class_name: torch.optim.lr_scheduler.MultiStepLR
  params:
    milestones: [8, 12, 20]
    gamma: 0.3
testing:
  debug: ${debug.enabled}
trainer:
  accumulate_grad_batches: 1
  distributed_backend: dp
  gpus: 1
  gradient_clip_val: 0.5
  num_sanity_val_steps: 0
  profiler: false
  weights_summary: null
  deterministic: True
training:
  debug: ${debug.enabled}
  learning_rate: 0.001
  loss: torch.nn.CrossEntropyLoss
  metric: val_early_stop_on
  mode: min
  seed: 42
  first_stage:
    epochs: 8
    best_model_name: stage1_model.ckpt
  second_stage:
    epochs: 24
    learning_rate: 0.0003
